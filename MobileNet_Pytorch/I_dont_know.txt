isinstance 뭐임?
> isinstance(m, nn.Conv2d)    m이 conv2d이면 True를 반환한다. 아니라면 False를 반환한다.

 nn.init.kaiming_normal_ ?
 nn.init.constant_  ?
 nn.init.normal_   ?



torch.ne
> 각 텐서의 요소(element)들을 element-wise로 각각 비교해 다르면 True를, 같으면 False를 반환한다. 
- 형태 : torch.ne(비교 대상 tensor, 비교할 tensor나 value, *, out=None) → Tensor
- torch.not_equal과 동일
EX) 
>>> torch.ne(torch.tensor([[2, 5], [4, 3]]), torch.tensor([[2, 8], [2, 3]]))
# 결과 : tensor([[False, True], [True, False]])


torch.eq
> ne와 반대로 각 텐서의 요소(element)들을 비교해 같으면 True를, 다르면 False를 반환한다.
- 형태 : torch.eq(비교 대상 tensor, 비교할 tensor나 value, *, out=None) → Tensor



Pytorch에서 Dataloader를 사용하는 이유?
dataloader class는 batch기반의 딥러닝 학습을 위해 mini batch를 만들어주는 역할이다.
dataloader를 통해 dataset의 전체 데이터가 batch size로 slice된다. 
앞서 만들었던 dataset을 input으로 넣어주면 여러 옵션(데이터 묶기, 섞기, 병렬처리)을 통해 batch를 만들어준다.